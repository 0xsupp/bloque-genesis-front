---
import type { InferGetStaticParamsType } from "astro";
import { PortableText } from "astro-portabletext";
//import PortableText from "../../components/PortableText.astro";
//import {customComponents} from "../../utils/customComponents";
import Layout from "../../layouts/Layout.astro";
import { formatDate } from "../../utils";
import { urlFor } from "../../utils/image";
import { getPost, getPosts } from "../../utils/posts";

export async function getStaticPaths() {
  const posts = await getPosts();
  return posts.map((post) => ({
    params: { slug: post.slug.current },
  }));
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
const { slug } = Astro.params as Params;


const post = await getPost(slug);
---

<Layout title={post.title!}>
<section class="py-8 sm:py-16 lg:py-20 mx-auto">


  <article>
    <header>
     
      <div class="flex justify-between flex-col sm:flex-row max-w-3xl mx-auto mt-0 mb-2 px-4 sm:px-6 sm:items-center dark:text-white">
        <p>
          <time datetime={String(post.publishDate)} class="inline-block">   {formatDate(post._createdAt)}</time>
          {
            post.author && (
              <>
                {' '}
                · <Icon name="tabler:user" class="w-4 h-4 inline-block -mt-0.5 dark:text-gray-400" />
                <span class="inline-block">{post.author}</span>
              </>
            )
          }
          {
            post.category && (
              <>
                {' '}
                ·{' '}
                <a class="hover:underline inline-block" href={getPermalink(post.category.slug, 'category')}>
                  {post.category.title}
                </a>
              </>
            )
          }
          {
            post.readingTime && (
              <>
                &nbsp;· <span>{post.readingTime}</span> min read
              </>
            )
          }
        </p>
      </div>

      <h1
        class="px-4 sm:px-6 max-w-3xl mx-auto text-4xl md:text-5xl font-bold leading-tighter tracking-tighter font-heading dark:text-white"
      >
        {post.title}
      </h1>
      <p
        class="max-w-3xl mx-auto mt-4 mb-8 px-4 sm:px-6 text-xl md:text-2xl text-muted dark:text-slate-400 text-justify"
      >
        {post.excerpt}
      </p>

      {
        post.mainImage ? (
         <img
         class="max-w-full lg:max-w-[900px] mx-auto mb-6 sm:rounded-md bg-gray-400 dark:bg-slate-700"

          src={urlFor(post.mainImage).url()}
          alt={post?.excerpt || ''}
        />
        ) : (
          <div class="max-w-3xl mx-auto px-4 sm:px-6">
            <div class="border-t dark:border-slate-700" />
          </div>
        )
      }
    </header>
    
    <div
      class="mx-auto px-6 sm:px-6 max-w-3xl prose prose-md lg:prose-xl dark:prose-invert dark:prose-headings:text-slate-300 prose-headings:font-heading prose-headings:leading-tighter prose-headings:tracking-tighter prose-headings:font-bold prose-a:text-primary dark:prose-a:text-blue-400 prose-img:rounded-md prose-img:shadow-lg mt-8 prose-headings:scroll-mt-[80px] prose-li:my-0 dark:text-slate-400"
    >

    <PortableText value={post.body} />
     

    </div>
    <div class="mx-auto px-6 sm:px-6 max-w-3xl mt-8 flex justify-between flex-col sm:flex-row">
    
    </div>
  </article>
</section>
</Layout>
