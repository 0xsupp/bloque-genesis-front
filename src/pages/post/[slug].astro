---
import type { InferGetStaticParamsType } from "astro";
import PortableText from '../../components/PortableText.astro'
import Card from "../../components/Card.astro";
import Layout from "../../layouts/Layout.astro";
import { formatDate } from "../../utils";
import { getPost, getPosts } from "../../utils/posts";
import  Image  from "../../components/SanityImage.astro";


export async function getStaticPaths() {
  const posts = await getPosts();
  return posts.map((post) => ({
    params: { slug: post.slug.current },
  }));
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
const { slug } = Astro.params as Params;


const post = await getPost(slug);
---

<Layout title={post.title!}>
<section class="py-8 sm:py-16 lg:py-20 mx-auto">


  <article>
    <header>
  
      <div class="flex justify-between flex-col sm:flex-row max-w-3xl mx-auto mt-0 mb-2 px-4 sm:px-6 sm:items-center dark:text-gray-300">        
        <a href="/" class="mb-4 inline-flex text-gray-800 dark:text-white hover:underline">
          <svg class="w-6 h-6 " aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M5 12l4-4m-4 4 4 4"/>
          </svg>
           Volver
        </a>
      </div>
      <div class="flex justify-between flex-col sm:flex-row max-w-3xl mx-auto mt-0 mb-2 px-4 sm:px-6 sm:items-center dark:text-gray-300">

        <p>
          <time class="inline-block">{formatDate(post._createdAt)}</time>
          {
            post.author && (
              <>
                {'Â· by'}
                <svg class="w-5 h-5 inline-block -mt-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                  <path stroke="currentColor" stroke-width="2" d="M7 17v1a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1a3 3 0 0 0-3-3h-4a3 3 0 0 0-3 3Zm8-9a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"/>
                </svg>

                <span class="-ml-1 inline-block">{post.author}</span>
              </>
            )
          }
    
        </p>
      </div>

      <h1
        class="px-4 sm:px-6 max-w-3xl mx-auto text-4xl md:text-5xl font-bold leading-tighter tracking-tighter font-heading dark:text-white"
      >
        {post.title}
      </h1>
      <p
        class="max-w-3xl mx-auto mt-4 mb-8 px-4 sm:px-6 text-xl md:text-2xl text-muted dark:text-slate-400 text-justify"
      >
        {post.excerpt}
      </p>

      {
        post.mainImage ? (
        <Image node={post.mainImage} />
        ) : (
          ''
        )
      }
    </header>
    
    <div
      class="mx-auto px-6 sm:px-6 max-w-3xl prose prose-md lg:prose-xl dark:prose-invert dark:prose-headings:text-slate-300 prose-headings:font-heading prose-headings:leading-tighter prose-headings:tracking-tighter prose-headings:font-bold prose-a:text-primary dark:prose-a:text-blue-400 prose-img:rounded-md prose-img:shadow-lg mt-8 prose-headings:scroll-mt-[80px] prose-li:my-0 dark:text-slate-400"
    >

    <PortableText value={post.body} />

    </div>
    <div class="mx-auto px-6 sm:px-6 max-w-3xl mt-8 flex justify-between flex-col sm:flex-row">
      {post.relatedPosts ? post.relatedPosts.map((relatedPost) => <Card post={relatedPost} />) : ''}
    </div>
  </article>
</section>
</Layout>
